sudo: false
language: generic

env:
  global:
    - secure: TFvHncH5F75jn5uqhhetNoPSZAkgboeLO2+OcjCtLwEzGN9pvy/ElGubPtLIGIZedT826tJDgssRv4ZKF3K5dYcNRt9Oc86rc2V3uEnoLapH5ZirVEmVMKPc61D/cawgPVZchdU050GALtXg+k/pYeNzBng+I5VdOq8NdJWSKGAkaSVtNyNhDKLAnmPlagZcPxhGYmGe4HTodRb+4xh0KnMP5NS/AQFUbs1aEq8f6XLNuFAAk8Tp/1I5ryOJdqxyVNr/AoIe5+i/ZRlIEO9R/oh3TUoDmnjQNLuK9QeR4jvM7axh0vwe0WkA013JBhd0BzPx5OoiBBIOIqr7t0Sw//RiUTY9v9K/dL83lpCnwwmY1QgZg7+a8drtr+3Y24IaIygMWudOmTpH73+KVuGdBNaTRceAcbXBu2WMGzg0rzO6w70tKoEKYeOt3SaIW+tBrbRZ6b4BPdzcG3Ck7K4lij+UxUMV6S0WvizQGV5LgBbql5YFCcdoMMx+Ewz0vgc77p2gZXPcLTg6L/tn0VsUpjnrlUdF11d1oQBjhwNOcljgkFt88HXd6Ja5QTyQ3MMQibBBQvks7lAzmkxDi+FbrN9rEEg/kzTXwZ4HN0WYz6aQb5d0qzutgAaZMPgf0Z5YcVwyoA2batMddRrO4H3LEMXIA/5kEakHawWlx0Gppn4=
    - secure: BFub0bTAiyuJSlY4xhG7gPDMn7z2aBcxdyX469xHkOGWNkx6X930wm8eHAy0skUDN2GxOMpTlPkizqdc5FPV2jatKRqoyvCMiH/8eYH0cddVFVtslV0e3CT15MzVTONoOge1exyOtzezyhaDZpO3BnTb8bjZdhazwnXwpUIgY6ERoqCTDspHhx8Ea9KyH/dqZuMWuRb6t0ko9UMfeW8N8CJ7CarkK7aHkJV2tvQ77YfZmrQZwvhpNhsPE63W+2fvlWa+HAXbrtKOsiJdmd7XpDBQlac2aXakgUaVfWtfvEJBAforF7L8Xngs207wPdvGPbr0quMPWfXESBJZgoYzn4gwCcUP9j6RiVTlNGZHAeacZDRCv8o0WSxpskGcRc59jE/aWI5eJd4wSDxXZHYgkUihN+nMe84zQsB/Go4QCjnq6pXV6dbBSvq/oCiuTwJr8DlA0WW5klsNqCleEv2pcihYBVkbbFFons3rFINTnZEJ8xf8d9jpl4pMaHPut6a7zSjtJJBaTeBtPy7X/rDVOrW2Iz++r0QfF4b+BU9Tjmk2EKFpPCkXqoQ4sUbAt9d97LqBsSBqdbpOy2P6WykTqPW02NxtinWALCavCvppYuDR2DYPAbaqLhHC0W2HIASsgMfKCtzOEkFkODRQwtiOGP+zUz+kZYeSsMsW8SzeyW0=

matrix:
  include:
    - os: linux
      env: PYTHON="3.4"

    - os: linux
      env: PYTHON="3.5"

    - os: linux
      env: PYTHON="3.6"

    - os: osx
      env: PYTHON="3.4"

    - os: osx
      env: PYTHON="3.5"

    - os: osx
      env: PYTHON="3.6"

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --append channels cantera
  - conda config --append channels bryanwweber
  - conda config --append channels conda-forge
  - conda update -q --all
  - sed -i -e "s/\${PYTHON}/"${PYTHON}"/" environment.yml
  - if [[ -z "$TRAVIS_TAG" ]]; then
      conda env create -qf environment.yml;
      source activate test-environment;
    else
      conda install -q conda-build anaconda-client;
    fi
  - conda info -a
  - conda list

script:
  - if [[ -z "$TRAVIS_TAG" ]]; then
      python setup.py test;
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$PYTHON" == "3.5" ]]; then
        git checkout -- environment.yml
        conda install -q sphinx doctr;
        python setup.py install;
        set -e;
        cd docs;
        make html SPHINXOPTS="-W";
        cd ..;
        doctr deploy --gh-pages-docs .;
        set +e;
      fi
    else
      conda build conda.recipe --python=${PYTHON};
      anaconda -t $ANACONDA_TOKEN upload $HOME/miniconda/conda-bld/*/uconnrcmpy*.tar.bz2;
    fi

after_success:
  - if [[ -z "$TRAVIS_TAG" ]]; then
      bash <(curl -s https://codecov.io/bash);
    fi
